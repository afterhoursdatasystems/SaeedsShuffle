// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Simulates the final standings of the league based on the provided match results.
 *
 * - simulateLeagueStandings - A function that simulates the league standings.
 * - SimulateLeagueStandingsInput - The input type for the simulateLeagueStandings function.
 * - SimulateLeagueStandingsOutput - The return type for the simulateLeagueStandings function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SimulateLeagueStandingsInputSchema = z.object({
  matchResults: z
    .string()
    .describe(
      'A string containing the match results. Each line should represent a match result in the format: TeamA vs TeamB: ScoreA-ScoreB'
    ),
});

export type SimulateLeagueStandingsInput = z.infer<
  typeof SimulateLeagueStandingsInputSchema
>;

const SimulateLeagueStandingsOutputSchema = z.object({
  simulatedStandings: z
    .string()
    .describe(
      'A string containing the simulated league standings, ordered by wins, then points difference. Include each team name, number of wins, and points difference, for example: \n1. TeamA: 10 wins, +20 points difference\n2. TeamB: 8 wins, +10 points difference'
    ),
});

export type SimulateLeagueStandingsOutput = z.infer<
  typeof SimulateLeagueStandingsOutputSchema
>;

export async function simulateLeagueStandings(
  input: SimulateLeagueStandingsInput
): Promise<SimulateLeagueStandingsOutput> {
  return simulateLeagueStandingsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'simulateLeagueStandingsPrompt',
  input: {schema: SimulateLeagueStandingsInputSchema},
  output: {schema: SimulateLeagueStandingsOutputSchema},
  prompt: `You are an AI that simulates league standings based on match results.

  Given the following match results:
  {{matchResults}}

  Simulate the final league standings, considering each team plays each other team twice.
  Order the standings by wins, then by points difference.
  Return the simulated standings as a string. Include each team name, number of wins, and points difference, for example:

1. TeamA: 10 wins, +20 points difference
2. TeamB: 8 wins, +10 points difference`,
});

const simulateLeagueStandingsFlow = ai.defineFlow(
  {
    name: 'simulateLeagueStandingsFlow',
    inputSchema: SimulateLeagueStandingsInputSchema,
    outputSchema: SimulateLeagueStandingsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
